digraph "Mogi::Thread"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{Mogi::Thread\n||+ Thread()\l+ ~Thread()\l+ start()\l+ stop()\l+ WaitForInternalThreadToExit()\l+ lock()\l+ unlock()\l+ pause()\l+ resume()\l+ running()\l# entryAction()\l# doAction()\l# exitAction()\l# checkSuspend()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [dir="back",color="darkgreen",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{Panda::Can\n||+ Can()\l+ ~Can()\l+ initialize()\l+ saveToFile()\l+ saveToCsvFile()\l+ setUsb()\l+ addObserver()\l+ removeObserver()\l+ startParsing()\l+ stopParsing()\l+ sendMessage()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_panda_1_1_can.html",tooltip="A class that handles the CAN data. "];
  Node1 -> Node3 [dir="back",color="darkgreen",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{Panda::Gps\n||+ Gps()\l+ ~Gps()\l+ initialize()\l+ getData()\l+ saveToFile()\l+ saveToCsvFile()\l+ setUsb()\l+ addObserver()\l+ isReady()\l+ startParsing()\l+ stopParsing()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_panda_1_1_gps.html",tooltip="A class that handles the GPS data. "];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{Panda::ObdPidRequest\n|+ data\l+ dataLength\l|+ ObdPidRequest()\l+ ~ObdPidRequest()\l+ request()\l+ complete()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_panda_1_1_obd_pid_request.html"];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{Panda::ToyotaHandler\n||+ ToyotaHandler()\l+ setHudLdaAlert()\l+ setHudBarrier()\l+ setHudLanes()\l+ setHudTwoBeeps()\l+ setHudRepeatedBeeps()\l+ setHudMiniCar()\l+ setHudCruiseCancelRequest()\l+ setSteerTorque()\l+ setAcceleration()\l+ getIgnitionOn()\l+ getControlsAllowed()\l+ getPandaHealth()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_panda_1_1_toyota_handler.html",tooltip="A threaded interface class that handles sending contorl commands to a Panda via a Panda::Handler..."];
  Node1 -> Node6 [dir="back",color="darkgreen",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{Panda::Usb\n||+ Usb()\l+ ~Usb()\l+ initialize()\l+ addObserver()\l+ sendCanData()\l+ requestCanData()\l+ requestUartData()\l+ hasGpsSupport()\l+ uartWrite()\l+ uartPurge()\land 19 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_panda_1_1_usb.html"];
}
