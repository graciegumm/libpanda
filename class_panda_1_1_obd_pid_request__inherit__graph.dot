digraph "Panda::ObdPidRequest"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{Panda::ObdPidRequest\n|+ data\l+ dataLength\l|+ ObdPidRequest()\l+ ~ObdPidRequest()\l+ request()\l+ complete()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{Panda::CanListener\n||+ ~CanListener()\l+ addToBlacklistBus()\l+ addToBlacklistMessageId()\l# newDataNotification()\l# newDataNotificationProxy()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_panda_1_1_can_listener.html",tooltip="An abstract class for new data notifications for new CAN data. "];
  Node3 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{Mogi::Thread\n||+ Thread()\l+ ~Thread()\l+ start()\l+ stop()\l+ WaitForInternalThreadToExit()\l+ lock()\l+ unlock()\l+ pause()\l+ resume()\l+ running()\l# entryAction()\l# doAction()\l# exitAction()\l# checkSuspend()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_mogi_1_1_thread.html",tooltip="Abstract class, handles a single thread. Features mutual exclusion and pause/resume. "];
}
